{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/batsaikhan/Documents/code/ReactCounter/src/components/Counter.js\";\nimport { Component } from \"react\";\n\nclass Counter extends Component {\n  constructor() {\n    super();\n\n    this.increment = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.decrement = () => {\n      this.setState({\n        count: this.state.count - 1\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        count: 0\n      });\n    };\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counterContainer\",\n      children: [this.state.count, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"decrement\",\n        onClick: this.decrement,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset\",\n        onClick: this.reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"increment\",\n        onClick: this.increment,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this);\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      this.setState(prevState => ({\n        count: prevState.count + 1\n      }));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/batsaikhan/Documents/code/ReactCounter/src/components/Counter.js"],"names":["Component","Counter","constructor","increment","setState","count","state","decrement","reset","render","componentDidMount","myInterval","setInterval","prevState","componentWillUnmount","clearInterval"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC5BE,EAAAA,WAAW,GAAG;AACV;;AADU,SAMZC,SANY,GAMA,MAAM;AAChB,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,GAAmB;AADd,OAAd;AAGD,KAVW;;AAAA,SAWZE,SAXY,GAWA,MAAM;AAChB,WAAKH,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,GAAmB;AADd,OAAd;AAGD,KAfW;;AAAA,SAgBZG,KAhBY,GAgBJ,MAAM;AACZ,WAAKJ,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE;AADK,OAAd;AAGD,KApBW;;AAEV,SAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAgBDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAG,kBAAjB;AAAA,iBACI,KAAKH,KAAL,CAAWD,KADf,eAEE;AAAQ,QAAA,SAAS,EAAG,WAApB;AAAgC,QAAA,OAAO,EAAK,KAAKE,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,SAAS,EAAG,OAApB;AAA4B,QAAA,OAAO,EAAK,KAAKC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,SAAS,EAAG,WAApB;AAAgC,QAAA,OAAO,EAAK,KAAKL,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AACDO,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAClC,WAAKR,QAAL,CAAcS,SAAS,KAAK;AACxBR,QAAAA,KAAK,EAAEQ,SAAS,CAACR,KAAV,GAAkB;AADD,OAAL,CAAvB;AAGD,KAJ4B,EAI1B,IAJ0B,CAA7B;AAKH;;AACDS,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKJ,UAAN,CAAb;AACH;;AA1CyB;;AA6ChC,eAAeV,OAAf","sourcesContent":["import { Component } from \"react\"\n\nclass Counter extends Component {\n    constructor() {\n        super()\n        this.state = {\n          count: 0\n        }\n      }\n      increment = () => {\n        this.setState({\n          count: this.state.count + 1\n        })\n      }\n      decrement = () => {\n        this.setState({\n          count: this.state.count - 1\n        })\n      }\n      reset = () => {\n        this.setState({\n          count: 0\n        })\n      }\n      render() {\n        return (\n          <div className = \"counterContainer\">\n            { this.state.count }\n            <button className = \"decrement\" onClick = { this.decrement }>-</button>\n            <button className = \"reset\" onClick = { this.reset }>Reset</button>\n            <button className = \"increment\" onClick = { this.increment }>+</button>\n            \n          </div>\n        )\n      }\n      componentDidMount() {\n          this.myInterval = setInterval(() => {\n            this.setState(prevState => ({\n                count: prevState.count + 1\n            }))\n          }, 1000)\n      }\n      componentWillUnmount() {\n          clearInterval(this.myInterval)\n      }\n}\n\nexport default Counter"]},"metadata":{},"sourceType":"module"}